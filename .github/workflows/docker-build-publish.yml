name: Build and Publish Docker Images - Version ${{ github.event.inputs.version }}

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Semantic version tag (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build-and-publish:
    name: Build and Publish Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Show selected version
        run: |
          echo "Version: ${{ github.event.inputs.version }}"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker images
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/devplaninc/dev-observer-web
            ghcr.io/devplaninc/dev-observer-server
          tags: |
            type=raw,value=${{ github.event.inputs.version }}

      # Build and push images in parallel
      - name: Build and push images in parallel
        run: |
          # Build and push web image in background
          docker buildx build \
            -f ./docker/web/Dockerfile \
            --push \
            --platform linux/amd64,linux/arm64 \
            -t ghcr.io/devplaninc/dev-observer-web:${{ github.event.inputs.version }} \
            -t ghcr.io/devplaninc/dev-observer-web:latest \
            --cache-from type=gha \
            --cache-to type=gha,mode=max \
            . &

          # Build and push server image in background
          docker buildx build \
            -f ./docker/server/Dockerfile \
            --push \
            --platform linux/amd64,linux/arm64 \
            -t ghcr.io/devplaninc/dev-observer-server:${{ github.event.inputs.version }} \
            -t ghcr.io/devplaninc/dev-observer-server:latest \
            --cache-from type=gha \
            --cache-to type=gha,mode=max \
            . &

          # Wait for all background jobs to complete
          wait

      # Verify images are publicly accessible
      - name: Verify images are publicly accessible
        run: |
          # Wait a moment for images to be available
          sleep 10

          # Log out from GitHub Container Registry to simulate non-authenticated pull
          docker logout ghcr.io

          # Try to pull the images without authentication
          echo "Pulling web image..."
          docker pull ghcr.io/devplaninc/dev-observer-web:${{ github.event.inputs.version }}

          echo "Pulling server image..."
          docker pull ghcr.io/devplaninc/dev-observer-server:${{ github.event.inputs.version }}

          echo "Images are publicly accessible!"
