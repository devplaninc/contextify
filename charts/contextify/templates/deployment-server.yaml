apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "contextify.server.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "contextify.server.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount.server }}
  selector:
    matchLabels:
      {{- include "contextify.server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: contextify-server
        {{- include "contextify.server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: server
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.server.repository }}:{{ .Values.image.server.tag }}"
          imagePullPolicy: {{ .Values.image.server.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.server.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/v1/live
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /api/v1/live
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 3
          env:
            {{- range $key, $value := .Values.env.server }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            - name: DEV_OBSERVER_CONFIG_FILE
              value: {{ .Values.server.configFilePath }}
          {{- if or .Values.server.secrets.envFromNames .Values.server.envConfigMap }}
          envFrom:
            {{- range .Values.server.secrets.envFromNames }}
            - secretRef:
                name: {{ . }}
            {{- end }}
            {{- if .Values.server.envConfigMap }}
            - configMapRef:
                name: {{ .Values.server.envConfigMap }}
            {{- end }}
          {{- end }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            {{- range .Values.server.secrets.mount }}
            - name: {{ .name | replace "." "-" }}
              mountPath: {{ .mountPath }}
              readOnly: true
            {{- end }}
            {{- range .Values.server.mounts }}
            - name: {{ .name | replace "." "-" }}
              mountPath: {{ .mountPath }}
              readOnly: true
            {{- end }}
          resources:
            {{- toYaml .Values.resources.server | nindent 12 }}
      volumes:
        - name: tmp
          emptyDir: {}
        {{- range .Values.server.mounts }}
        - name: {{ .name | replace "." "-" }}
          configMap:
            name: {{ .name }}
            {{- if .items }}
            items:
              {{- range .items }}
              - key: {{ .key }}
                path: {{ .path }}
              {{- end }}
            {{- end }}
        {{- end }}