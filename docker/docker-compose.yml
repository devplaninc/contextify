services:
  envoy:
    image: envoyproxy/envoy:${ENVOY_IMAGE_TAG:-v1.25-latest}
    ports:
      - "${ENVOY_PORT:-8099}:8080"
      - "${ENVOY_CERT_PORT:-18085}:8085"
      - "443:8443"
    volumes:
      - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml
      - ./envoy/certs:/etc/envoy/certs
      - ./envoy/init-certs.sh:/usr/local/bin/init-certs.sh
    environment:
      - ENVOY_LOG_LEVEL=${ENVOY_LOG_LEVEL:-info}
      - ENABLE_SSL=${ENABLE_SSL:-false}
    entrypoint: /usr/local/bin/init-certs.sh
    networks:
      - dev-observer-network
    depends_on:
      - web
      - server

  cert-manager:
    image: certbot/certbot:latest
    profiles:
      - ssl
    volumes:
      - ./envoy/certs:/etc/letsencrypt
      - ./cert-manager/webroot:/var/www/certbot
      - ./cert-manager/update-certs.sh:/usr/local/bin/update-certs.sh
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME:-localhost}
      - EMAIL=${CERT_EMAIL:-info@devplan.com}
      - CERT_NAME=envoy-cert
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot certonly --webroot -w /var/www/certbot --email $${EMAIL} -d $${DOMAIN_NAME} --agree-tos --non-interactive --cert-name $${CERT_NAME} || true; if [ -d \"/etc/letsencrypt/live/$${CERT_NAME}\" ]; then /usr/local/bin/update-certs.sh; fi; sleep 12h & wait $${!}; done;'"
    networks:
      - dev-observer-network

  web:
    image: ghcr.io/devplaninc/dev-observer-web:${WEB_IMAGE_TAG:-latest}
    expose:
      - "${WEB_PORT:-5173}"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - LOG_LEVEL=${WEB_LOG_LEVEL:-info}
    networks:
      - dev-observer-network

  server:
    image: ghcr.io/devplaninc/dev-observer-server:${SERVER_IMAGE_TAG:-latest}
    expose:
      - "${SERVER_PORT:-8090}"
    volumes:
      - ./compose_env/${SERVER_CONFIG_FILE}:/etc/dev-observer-server/config.toml
    environment:
      - PYTHON_ENV=${PYTHON_ENV:-development}
      - LOG_LEVEL=${SERVER_LOG_LEVEL:-info}
      - DEV_OBSERVER_CONFIG_FILE=/etc/dev-observer-server/config.toml
      - DEV_OBSERVER__GIT__GITHUB__PERSONAL_TOKEN=${DEV_OBSERVER__GIT__GITHUB__PERSONAL_TOKEN}
    networks:
      - dev-observer-network

networks:
  dev-observer-network:
    driver: bridge
