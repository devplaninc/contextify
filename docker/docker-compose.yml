services:
  envoy:
    image: envoyproxy/envoy:${ENVOY_IMAGE_TAG:-v1.25-latest}
    ports:
      - "${ENVOY_PORT:-8099}:8080"
      - "${ENVOY_CERT_PORT:-18085}:8085"
      - "443:8443"
    volumes:
      - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml
      - ${CERTS_PATH:-./envoy/certs}:/etc/envoy/certs
      - ./envoy/init-certs.sh:/usr/local/bin/init-certs.sh
    environment:
      - ENVOY_LOG_LEVEL=${ENVOY_LOG_LEVEL:-info}
      - ENABLE_SSL=${ENABLE_SSL:-false}
      - CERT_NAME=envoy-cert
    entrypoint: /usr/local/bin/init-certs.sh
    networks:
      - dev-observer-network
    depends_on:
      - web
      - server
      - acme-challenge

  cert-manager:
    image: certbot/certbot:latest
    profiles:
      - ssl
    volumes:
      - ${CERTS_PATH:-./envoy/certs}:/etc/letsencrypt
      - ./cert-manager/webroot:/var/www/certbot
      - ./cert-manager/update-certs.sh:/usr/local/bin/update-certs.sh
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME:-localhost}
      - EMAIL=${CERT_EMAIL:-info@devplan.com}
      - CERT_NAME=envoy-cert
    entrypoint: |
      /bin/sh -c '
      trap exit TERM
      while :
      do
        certbot certonly --webroot -w /var/www/certbot --email $${EMAIL} -d $${DOMAIN_NAME} --agree-tos --non-interactive --cert-name $${CERT_NAME} || true
        if [ -d "/etc/letsencrypt/live/$${CERT_NAME}" ]; then
          /usr/local/bin/update-certs.sh
        fi
        sleep 12h & wait $${!}
      done
      '
    networks:
      - dev-observer-network

  web:
    image: ghcr.io/devplaninc/dev-observer-web:${WEB_IMAGE_TAG:-latest}
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - LOG_LEVEL=${WEB_LOG_LEVEL:-info}
    networks:
      - dev-observer-network

  server:
    image: ghcr.io/devplaninc/dev-observer-server:${SERVER_IMAGE_TAG:-latest}
    dns:
      - 1.1.1.1
      - 8.8.8.8
    volumes:
      - ${SERVER_CONFIG_PATH:-./compose_env/${SERVER_CONFIG_FILE:-}}:/etc/dev-observer-server/config.toml
      - ${SERVER_SECRETS_PATH:-./compose_env/.empty_secrets}:/etc/dev-observer-server/.env.secrets
      - ${SERVER_ENV_PATH:-./compose_env/.empty_env}:/etc/dev-observer-server/.env
    environment:
      - PYTHON_ENV=${PYTHON_ENV:-development}
      - LOG_LEVEL=${SERVER_LOG_LEVEL:-info}
      - DEV_OBSERVER_CONFIG_FILE=/etc/dev-observer-server/config.toml
      - DEV_OBSERVER_SECRETS_FILE=/etc/dev-observer-server/.env.secrets
      - DEV_OBSERVER_ENV_FILE=/etc/dev-observer-server/.env
    networks:
      - dev-observer-network

  acme-challenge:
    image: nginx:alpine
    volumes:
      - ./cert-manager/webroot:/usr/share/nginx/html:ro
    networks:
      - dev-observer-network

networks:
  dev-observer-network:
    driver: bridge
