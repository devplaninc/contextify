syntax = "proto3";

package dev_observer.api.types.processing;

import "google/protobuf/timestamp.proto";
import "dev_observer/api/types/observations.proto";
import "dev_observer/api/types/schedule.proto";

message ProcessingItemKey {
  oneof entity {
    // Repo summary processing.
    string github_repo_id = 100;
    // Website summary processing.
    string website_url = 101;
    // One-off request
    string request_id = 102;
    string periodic_aggregation_id = 103;
  }
}

message ProcessingItem {
  reserved 6;
  reserved "request";
  ProcessingItemKey key = 1;
  optional google.protobuf.Timestamp next_processing = 2;
  optional google.protobuf.Timestamp last_processed = 3;
  optional string last_error = 4;
  bool no_processing = 5;
  optional google.protobuf.Timestamp processing_started_at = 7;
  optional ProcessingItemData data = 8;
}

message PeriodicAggregation {
  AggregatedSummaryParams params = 1;
  dev_observer.api.types.schedule.Schedule schedule = 2;
}

message AggregatedSummaryParams {
  int32 look_back_days = 1;
  google.protobuf.Timestamp end_date = 2;
  Target target = 3;

  message Target {
    repeated string git_repo_ids = 1;
  }
}

message ProcessingRequest {
  oneof type {
    ProcessGitChangesRequest git_changes = 100;
  }
}

message ProcessGitChangesRequest {
  string git_repo_id = 1;
  int32 look_back_days = 2;
}

message ProcessingItemResult {
  reserved 6, 3;
  reserved "request", "observations";
  // Unique id of the result
  string id = 1;
  ProcessingItemKey key = 2;
  optional string error_message = 4;
  google.protobuf.Timestamp created_at = 5;
  optional ProcessingItemData data = 7;
  optional ProcessingItemResultData result_data = 8;
}

message RepoObservation {
  string repo_id = 1;
  repeated dev_observer.api.types.observations.ObservationKey observations = 2;
}

message PeriodicAggregationResult {
  repeated RepoObservation repo_observations = 1;
}

message ProcessingItemData {
  // Free form indexed reference id that may be useful for connecting request to a specific repo or other entity.
  optional string reference_id = 1;
  optional string namespace = 2;
  optional string created_by = 3;
  oneof type {
    ProcessingRequest request = 100;
    PeriodicAggregation periodic_aggregation = 101;
  }
}

message ProcessingItemResultData {
  repeated dev_observer.api.types.observations.ObservationKey observations = 1;
  oneof type {
    PeriodicAggregationResult periodic_aggregation = 100;
  }
}

message ProcessingResultFilter {
  optional string namespace = 1;
  optional string reference_id = 2;
  optional string request_type = 3;
  repeated ProcessingItemKey keys = 4;
}

message ProcessingItemsFilter {
  optional string namespace = 1;
  optional string reference_id = 2;
  optional string request_type = 3;
  repeated ProcessingItemKey keys = 4;
}
